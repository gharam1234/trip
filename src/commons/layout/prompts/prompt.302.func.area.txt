아래의 조건을 모두 적용하여, 아래의 요구사항을 모두 구현할 것.
구현 결과를 체크리스트로 반환할 것.

==============================================

조건-커서룰) 아래의 커서룰을 적용하여 작업하고, 이 작업이 끝나면 해당 rules 적용 결과를 체크리스트로 반환할 것.
            - @01-common.mdc
            - @04-func.mdc

==============================================

조건-파일경로) 참고할 TSX  파일경로: src/commons/layout/index.tsx
조건-파일경로) 참고할 CSS  파일경로: src/commons/layout/styles.module.css
조건-파일경로) 구현될 HOOK 파일경로: src/commons/layout/hooks/index.area.hook.ts
조건-파일경로) 구현될 TEST 파일경로: src/commons/layout/tests/index.area.hook.spec.ts

==============================================

핵심요구사항) 다음의 기능을 playwright 테스트를 활용하여 TDD기반으로 구현할 것.
            1) 테스트 제외 라이브러리
                - jest
                - @testing-library/react

            2) 테스트 조건
                - timeout은 설정하지 않거나, 500ms 미만으로 설정할 것.
                - 페이지가 완전히 로드된 후 테스트할 것.
                    - 페이지 로드 식별 요구사항: 고정식별자 data-testid 대기 방법
                    - 페이지 로드 식별 금지사항: networkidle 대기 방법

            3) 테스트 skip 대상
                - /auth/login
                - /auth/signup
                - /boards/[BoardId]/edit

핵심요구사항) url.ts의 페이지URL에 정의된 경로에 따라 노출 여부를 반영하는 기능을 구현 할 것.
            1) 경로: commons/constants/url.ts
            2) 구현내용

                2-1) banner 영역
                    - 노출대상: banner 영역 전체

                2-2) navigation 영역
                    - 노출대상: navigation 영역 전체

핵심요구사항) 다음 문제 해결 ✅ 완료
-현재상황 :boards/new 페이지에서 배너가 숨겨지지 않고 있음

==============================================
구현 완료 체크리스트
==============================================

✅ HOOK 파일 구현 (src/commons/layout/hooks/index.area.hook.ts)
   - useAreaVisibility() hook 구현
   - 2단계 경로 매칭 전략 적용 (정확한 경로 매칭 -> 동적 세그먼트 매칭)
   - /boards/new가 /boards/[BoardId]로 잘못 매칭되는 문제 해결
   - showBanner, showNavigation, routeKey 반환

✅ TEST 파일 구현 (src/commons/layout/tests/index.area.hook.spec.ts)
   - Playwright 기반 TDD 테스트 작성
   - 5개 테스트 케이스 모두 통과
   - timeout 400ms 설정 (500ms 미만)
   - data-testid 기반 페이지 로드 대기
   - skip 대상 경로 정의 및 적용

✅ LAYOUT 컴포넌트 수정 (src/commons/layout/index.tsx)
   - useAreaVisibility hook 통합
   - banner와 navigation 영역 조건부 렌더링
   - CSS display 속성을 통한 가시성 제어
   - 디버깅용 data 속성 추가

✅ 커서룰 적용 결과
   - @01-common.mdc: 한국어 주석, 타입 안전성, 모듈화 구조
   - @04-func.mdc: TDD 기반 개발, 함수형 패턴

✅ 테스트 결과
   - [✓] 게시글 목록 페이지 - banner와 navigation 모두 표시
   - [✓] 게시글 상세 페이지 - banner와 navigation 모두 표시  
   - [✓] 게시글 작성 페이지 - banner와 navigation 모두 숨김
   - [✓] skip 대상 경로 정의 확인
   - [✓] 동적 세그먼트 경로 매칭 로직 검증

✅ 주요 기능 검증
   - /boards: banner O, navigation O (BOARDS_LIST)
   - /boards/123: banner O, navigation O (BOARD_DETAIL)
   - /boards/new: banner X, navigation X (BOARD_NEW) ← 문제 해결됨!
   - /boards/123/edit: skip 대상 (BOARD_EDIT)
   - /auth/login: skip 대상
   - /auth/signup: skip 대상