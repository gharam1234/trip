아래의 조건을 모두 적용하여, 아래의 요구사항을 모두 구현할 것.
구현 결과를 체크리스트로 반환할 것.

==============================================

조건-커서룰) 아래의 커서룰을 적용하여 작업하고, 이 작업이 끝나면 해당 rules 적용 결과를 체크리스트로 반환할 것.
            - @01-common.mdc
            - @02-wireframe.mdc
            - @03-ui.mdc

==============================================

조건-피그마) 활용할MCP: CursorTalkToFigmaMCP(채널명: 2px2h6i9)
조건-피그마) 참고할 공통컴포넌트 노드ID: 285:32617 , 285:32505 , 285:32453, 285:32418 ,285:32417, 285:32417

조건-파일경로) 구현될 TSX 파일경로: src/commons/components/button/index.tsx
조건-파일경로) 구현될 CSS 파일경로: src/commons/components/button/styles.module.css
 
==============================================

 기존히스토리 참고만-핵심요구사항) MCP를 연동하여 피그마의 디자인을 그대로 소스코드로 구현할 것.

 기존히스토리 참고만- 핵심요구사항)  다음 조건을 모두 만족하는 완전한 variant 시스템을 구현할 것.
            - variant: 'primary'| 'secondary'
            - active : 'active' | 'inactive' 
            - 참고할 공통컴포넌트 디자인 노드ID 
            1.primary && active : 285:32453
            2.primary && inactive : 285:32418
            3.secondary && active : 285:32417
            4.secondary && inactive : 285:32417
            
==============================================

기존 히스토리-참고만 -핵심요구사항) 버튼안에 텍스트가 들어가도 ui가 변형되지 않도록 (줄바꿈이 되지 않게)

==============================================
핵심요구사항) 다음 조건을 모두 만족하는 완전한 variant 시스템을 구현할 것.
            - variant: 'primary' | 'secondary' | 'tertiary'
            - size: 'small' | 'medium' | 'large'
            

