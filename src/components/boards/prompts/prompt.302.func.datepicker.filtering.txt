아래의 조건을 모두 적용하여, 아래의 요구사항을 모두 구현할 것.
구현 결과를 체크리스트로 반환할 것.

==============================================

조건-커서룰) 아래의 커서룰을 적용하여 작업하고, 이 작업이 끝나면 해당 rules 적용 결과를 체크리스트로 반환할 것.
            - @01-common.mdc
            - @04-func.mdc

==============================================

조건-파일경로) 참고할 TSX 파일경로: src/components/boards/index.tsx
조건-파일경로) 참고할 CSS 파일경로: src/components/boards/styles.module.css
조건-파일경로) 구현될 HOOK 파일경로: src/components/boards/hooks/datepicker.filtering.hook.ts
조건-파일경로) 구현될 TEST 파일경로: src/components/boards/tests/datepicker.filtering.hook.spec.ts

==============================================

핵심요구사항) 다음의 기능을 playwright 테스트를 활용하여 TDD 기반으로 구현하고, 테스트에 통과할 때까지 반복할 것.

1) 테스트 제외 라이브러리
- jest
- @testing-library/react

2) 테스트 조건
- timeout은 설정하지 않거나, 500ms 미만으로 설정할 것.
- 페이지가 완전히 로드된 후 테스트할 것.
  - 페이지 로드 식별 요구사항: 고정식별자 data-testid 대기 방법
  - **중요금지사항** 페이지 로드 식별 금지사항: networkidle 대기 방법

3) 테스트 API 조건
3-1) 데이터
- 실제 API 데이터를 사용할 것.
- Mock 데이터를 사용하지 말 것.

3-2) 성공 시나리오
- 데이트피커에서 날짜 범위 선택 후 게시글 필터링 동작

3-3) 실패 시나리오
- 범위 선택 실패 또는 검색 결과 없음 처리

4) 데이터 조건
    - 저장소: 백엔드 서버(GraphQL API)
    - 요청방식: fetchBoards query
    - 요청 파라미터 구조:

        query fetchBoards(
          search: String
          startDate: DateTime
          endDate: DateTime
          page: Int
        ) {
          _id
          writer
          title
          contents
          createdAt
        }


핵심요구사항) <div className={styles.searchDatepicker}> 영역에 antd DatePicker를 활용하여 날짜 범위 선택 기능을 구현할 것.

1) 데이트피커 기능 구현
- antd의 RangePicker를 사용하여 시작날짜와 종료날짜를 선택할 수 있도록 구현
- 선택된 날짜 범위를 상태로 관리할 것
- 선택된 날짜가 변경될 때마다 게시글 필터링 쿼리 실행

2) 필터링 로직
- 선택된 날짜 범위를 GraphQL 쿼리 파라미터로 전달
- startDate: 선택된 범위의 시작 날짜 (YYYY-MM-DD 형식)
- endDate: 선택된 범위의 종료 날짜 (YYYY-MM-DD 형식)
- 날짜 범위 미선택 시 전체 게시글 조회

3) UI 동작
- 날짜 선택 후 자동으로 필터링 적용 (버튼 클릭 불필요)
- 선택된 날짜 범위가 UI에 표시될 것
- 범위 초기화 기능 포함

4) 테스트
- 날짜 범위 선택 후 게시글이 필터링되는지 검증
- API 호출 시 올바른 날짜 파라미터가 전달되는지 검증
- 범위 초기화 후 전체 게시글이 조회되는지 검증
