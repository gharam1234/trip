아래의 조건을 모두 적용하여, 아래의 요구사항을 모두 구현할 것.
구현 결과를 체크리스트로 반환할 것.

==============================================

조건-커서룰) 아래의 커서룰을 적용하여 작업하고, 이 작업이 끝나면 해당 rules 적용 결과를 체크리스트로 반환할 것.
            - @01-common.mdc
            - @04-func.mdc

==============================================

조건-파일경로) 참고할 TSX 파일경로: src/components/boards/index.tsx
조건-파일경로) 참고할 CSS 파일경로: src/components/boards/styles.module.css
조건-파일경로) 구현될 HOOK 파일경로: src/components/boards/hooks/index.search.hook.ts
조건-파일경로) 구현될 TEST 파일경로: src/components/boards/tests/index.search.hook.spec.ts

==============================================

핵심요구사항) 다음의 기능을 playwright 테스트를 활용하여 TDD 기반으로 구현하고, 테스트에 통과할 때까지 반복할 것.

1) 테스트 제외 라이브러리
- jest
- @testing-library/react

2) 테스트 조건
- timeout은 설정하지 않거나, 500ms 미만으로 설정할 것.
- 페이지가 완전히 로드된 후 테스트할 것.
  - 페이지 로드 식별 요구사항: 고정식별자 data-testid 대기 방법
  - **중요금지사항** 페이지 로드 식별 금지사항: networkidle 대기 방법

3) 테스트 API 조건
3-1) 데이터
- 실제 API 데이터를 사용할 것.
- Mock 데이터를 사용하지 말 것.

3-2) 성공 시나리오
- API 응답 데이터를 기반으로 검색 결과 필터링

3-3) 실패 시나리오
- API 호출 실패 또는 빈 배열 처리

4) 데이터 조건
    - 저장소: 백엔드 서버(GraphQL API)
    - 요청방식: fetchBoards query
    - 요청 파라미터 구조:

        query fetchBoards(
          search: String
          startDate: DateTime
          endDate: DateTime
          page: Int
        ) {
          _id
          writer
          title
          contents
          createdAt
        }

핵심요구사항) 검색 기능을 구현하고, SearchBar에서 입력한 제목 검색어와 DatePicker에서 선택한 날짜 범위를 기반으로 게시글을 필터링할 것.

1) 바인딩할 데이터
- Apollo Client useQuery(fetchBoards) 결과 (search, startDate, endDate 파라미터 포함)

2) 데이터 바인딩 상세내용
- 검색어(keyword): SearchBar 입력값 → fetchBoards 쿼리의 search 파라미터로 전달
- 시작 날짜(startDate): DatePicker 선택값 → fetchBoards 쿼리의 startDate 파라미터로 전달
- 종료 날짜(endDate): DatePicker 선택값 → fetchBoards 쿼리의 endDate 파라미터로 전달
- 페이지(page): Pagination 상태 → fetchBoards 쿼리의 page 파라미터로 전달
- 검색 버튼 클릭 시 페이지를 1로 리셋하고 검색 실행
- 검색 결과가 없을 경우: "검색 결과가 없습니다." 메시지 표시

3) CSS 처리
- 검색 상태에 따른 UI 업데이트 (로딩, 에러, 결과 없음 등)
- 기존 스타일 유지

4) 테스트
- SearchBar에 검색어 입력 후 검색 버튼 클릭 시 API 호출 확인
- DatePicker에서 날짜 범위 선택 후 검색 시 API 파라미터에 올바르게 전달되는지 확인
- 검색 결과가 올바르게 필터링되어 렌더링되는지 확인
- 검색 결과가 없을 때 적절한 메시지 표시 확인
