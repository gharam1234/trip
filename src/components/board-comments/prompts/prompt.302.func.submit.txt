아래의 조건을 모두 적용하여, 아래의 요구사항을 모두 구현할 것.
구현 결과를 체크리스트로 반환할 것.

==============================================

조건-커서룰) 아래의 커서룰을 적용하여 작업하고, 이 작업이 끝나면 해당 rules 적용 결과를 체크리스트로 반환할 것.
            - @01-common.mdc
            - @04-func.mdc

==============================================

조건-파일경로) 참고할 TSX 파일경로: src/components/board-comments/index.tsx
조건-파일경로) 참고할 CSS 파일경로: src/components/board-comments/styles.module.css
조건-파일경로) 구현될 HOOK 파일경로: src/components/board-comments/hooks/index.submit.hook.ts
조건-파일경로) 구현될 TEST 파일경로: src/components/board-comments/tests/index.submit.hook.spec.ts
조건-파일경로) 구현될 MUTATION 파일경로: src/components/board-comments/graphql/mutations.ts

==============================================

핵심요구사항) 다음의 기능을 playwright 테스트를 활용하여 TDD기반으로 구현하고, 테스트에 통과할 때까지 반복할 것.
            1) 테스트 제외 라이브러리
                - jest
                - @testing-library/react

            2) 테스트 조건
                - timeout은 설정하지 않거나, 500ms 미만으로 설정할 것.
                - 페이지가 완전히 로드된 후 테스트할 것.
                    - 페이지 로드 식별 요구사항: 고정식별자 data-testid 대기 방법
                    - 페이지 로드 식별 금지사항: networkidle 대기 방법
            
            3) 테스트 API 조건
                3-1) 데이터
                    - 실제데이터를 사용할 것.
                    - Mock데이터 사용하지 말 것.

                3-2) 성공시나리오
                    - 댓글 작성 후 목록이 자동으로 업데이트되는지 검증

                3-3) 실패시나리오
                    - 필수 입력값이 없을 때 에러 처리
                    - API 호출 실패 시 에러 메시지 표시

            4) 데이터 조건
                - 저장소: 백엔드 서버(GraphQL API)
                - 요청방식: createBoardComment mutation
                - 요청 파라미터 구조:
                
                    mutation createBoardComment($createBoardCommentInput: CreateBoardCommentInput!) {
                      createBoardComment(createBoardCommentInput: $createBoardCommentInput) {
                        _id
                        writer
                        contents
                        rating
                        createdAt
                      }
                    }

핵심요구사항) 댓글 작성 폼에서 데이터를 입력받아 createBoardComment API를 호출하고, 성공 시 댓글 목록을 새로고침할 것.

1) 입력 필드
- 작성자: writer (필수, String, 로그인 사용자 정보에서 자동 입력)
- 내용: contents (필수, String)
- 비밀번호: password (필수, String, 4자리 숫자)
- 평점: rating (필수, Number, 1~5점)

2) 유효성 검증
- 내용: 1자 이상 입력
- 비밀번호: 4자리 숫자만 허용
- 평점: 1~5 사이의 숫자

3) 제출 후 처리
- 성공 시: 입력 폼 초기화, 댓글 목록 refetch
- 실패 시: 에러 메시지 표시

4) 테스트
- 입력값 검증 테스트
- API 호출 성공 시나리오 테스트
- API 호출 실패 시나리오 테스트