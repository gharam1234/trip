아래의 조건을 모두 적용하여, 아래의 요구사항을 모두 구현할 것.
구현 결과를 체크리스트로 반환할 것.

==============================================

조건-커서룰) 아래의 커서룰을 적용하여 작업하고, 이 작업이 끝나면 해당 rules 적용 결과를 체크리스트로 반환할 것.
            - @01-common.mdc
            - @04-func.mdc

==============================================

조건-파일경로) 참고할 TSX 파일경로: src/components/user-menu/index.tsx
조건-파일경로) 참고할 CSS 파일경로: src/components/user-menu/styles.module.css
조건-파일경로) 구현될 HOOK 파일경로: src/components/user-menu/hooks/index.logout.hook.ts
조건-파일경로) 구현될 TEST 파일경로: src/components/user-menu/tests/index.logout.hook.spec.ts

==============================================

핵심요구사항) 다음의 기능을 playwright 테스트를 활용하여 TDD 기반으로 구현하고, 테스트에 통과할 때까지 반복할 것.

1) 테스트 제외 라이브러리
   - jest
   - @testing-library/react
   - mock 데이터 및 mock 함수는 사용하지 말 것.

2) 테스트 조건
   - timeout은 설정하지 않거나, 500ms 미만으로 설정할 것.
   - 페이지가 완전히 로드된 후 테스트할 것.
     - 페이지 로드 식별 요구사항: 고정식별자 data-testid 대기 방법
     - **중요금지사항** 페이지 로드 식별 금지사항: networkidle, waitForTimeout 대기 방법

3) 테스트 로컬스토리지 조건
   3-1) 데이터
        - 저장소: localStorage
        - key: 토큰 정보 (authToken, token, access_token 등)
        - value: 실제 유효한 토큰 값

   3-2) 성공 시나리오
        - 로그아웃 버튼 클릭 시 localStorage의 토큰 정보가 삭제되는지 확인
        - localStorage 삭제 후 /auth/login 페이지로 이동하는지 확인
        - 페이지 이동이 정상적으로 완료되는지 확인

   3-3) 실패 시나리오
        - localStorage에 토큰이 없을 때 에러 처리 확인
        - 페이지 이동 실패 시 대체 처리 확인

핵심요구사항) 현재의 모든 구조를 그대로 유지하고, 로그아웃 기능을 hook으로 분리하여 구현할 것.

1) 로그아웃 처리 로직
   - localStorage에서 토큰 정보를 삭제할 것
   - 삭제할 토큰 key 목록: authToken, token, access_token (프로젝트에 맞게 조정)
   - 토큰 삭제 후 /auth/login으로 페이지 이동할 것

2) Hook 구현
   - useLogout 훅을 구현할 것
   - 반환 값: handleLogout 함수
   - handleLogout 함수는 로그아웃 처리를 비동기로 수행할 것

3) 컴포넌트 연동
   - user-menu 컴포넌트의 onLogout props에서 hook의 handleLogout 함수를 호출할 것
   - 로그아웃 버튼(user-menu-logout-button)의 onClick 이벤트가 정상적으로 작동하는지 확인할 것

4) 테스트 요구사항
   - 로그아웃 버튼 클릭 시 localStorage 삭제 테스트
   - 로그아웃 후 /auth/login으로 이동 테스트
   - localStorage가 비어있을 때의 에러 처리 테스트
   - 실제 localStorage를 사용하여 테스트할 것 (mock 사용 금지)

// === 변경 주석 (자동 생성) ===
// 시각: 2025-10-29 16:25:35
// 변경 이유: 요구사항 반영 또는 사소한 개선(자동 추정)
// 학습 키워드: 개념 식별 불가(자동 추정 실패)

